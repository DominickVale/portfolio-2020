{"version":3,"sources":["webpack:///./src/pages/tests.js"],"names":["Tests"],"mappings":"2FAAA,4CA+CeA,UAvCD,WAkCZ,OACA,kBAAC,IAAD","file":"component---src-pages-tests-js-135f269dc007e3f411cf.js","sourcesContent":["import React, {useEffect, useRef} from \"react\"\r\nimport Layout from \"../components/layout\"\r\n/* import * as THREE from 'three'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'; */\r\n\r\n\r\nconst Tests = () => {\r\n  \r\n/*   const threeRef = useRef(null)\r\n\r\n  const renderer = new THREE.WebGLRenderer()\r\n  const scene = new THREE.Scene();\r\n  const camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000)\r\n  const composer = new EffectComposer(renderer)\r\n  \r\n  const render = () => {\r\n    requestAnimationFrame(render);\r\n    composer.render()\r\n  }\r\n\r\n  const init = () => {\r\n    let renderPass = new RenderPass(scene, camera)\r\n    let grain = new FilmPass( 0.35, 0.5, 2048, false)\r\n\r\n    renderer.setSize( window.innerWidth, window.innerHeight )\r\n    renderer.setPixelRatio( window.devicePixelRatio )\r\n    composer.addPass(renderPass)\r\n    composer.addPass(grain)\r\n  }\r\n  useEffect(() => {\r\n\r\n    init()\r\n    threeRef.current.appendChild(renderer.domElement)\r\n    render();\r\n  }, [])\r\n  \r\n\r\n */\r\n\r\n\r\n  return (\r\n  <Layout>\r\n  </Layout>\r\n)}\r\n\r\nexport default Tests\r\n"],"sourceRoot":""}